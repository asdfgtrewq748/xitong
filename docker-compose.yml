# ============================================================================
# Docker Compose 配置 - 煤层地质建模系统
# ============================================================================
# 版本: 3.8
# 服务: frontend (Nginx + Vue), backend (FastAPI)
# ============================================================================

version: '3.8'

services:
  # ──────────────────────────────────────────────────────────────────────────
  # 后端服务 - FastAPI
  # ──────────────────────────────────────────────────────────────────────────
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: mining-system-backend:latest
    container_name: mining-backend
    
    restart: unless-stopped
    
    ports:
      - "8000:8000"
    
    environment:
      - PYTHONUNBUFFERED=1
      - TZ=Asia/Shanghai
      # 可以通过环境变量覆盖配置
      - MAX_UPLOAD_SIZE_MB=50
      - CACHE_ENABLED=true
    
    volumes:
      # 数据持久化
      - ./backend/data:/app/data
      - ./backend/logs:/app/logs
      # 开发环境可以挂载代码（生产环境注释掉）
      # - ./backend:/app
    
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/api/health', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    networks:
      - mining-network
    
    # 资源限制（根据服务器调整）
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M

  # ──────────────────────────────────────────────────────────────────────────
  # 前端服务 - Nginx + Vue
  # ──────────────────────────────────────────────────────────────────────────
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: mining-system-frontend:latest
    container_name: mining-frontend
    
    restart: unless-stopped
    
    ports:
      - "80:80"
    
    environment:
      - TZ=Asia/Shanghai
    
    volumes:
      # Nginx日志
      - ./frontend/logs:/var/log/nginx
    
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    
    depends_on:
      backend:
        condition: service_healthy
    
    networks:
      - mining-network
    
    # 资源限制
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M

# ──────────────────────────────────────────────────────────────────────────
# 网络配置
# ──────────────────────────────────────────────────────────────────────────
networks:
  mining-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# ──────────────────────────────────────────────────────────────────────────
# 卷配置（如果需要命名卷）
# ──────────────────────────────────────────────────────────────────────────
# volumes:
#   backend-data:
#   backend-logs:
#   frontend-logs:
