# ============================================================================
# Docker Compose 配置 - 煤层地质建模系统
# ============================================================================
# 版本: 3.8
# 服务: frontend (Nginx + Vue), backend (FastAPI)
# ============================================================================

version: '3.8'

services:
  # ──────────────────────────────────────────────────────────────────────────
  # 后端服务 - FastAPI
  # ──────────────────────────────────────────────────────────────────────────
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      # 使用 BuildKit 加速构建
      cache_from:
        - mining-system-backend:latest
      args:
        - BUILDKIT_INLINE_CACHE=1
    image: mining-system-backend:latest
    container_name: mining-backend
    
    restart: unless-stopped
    
    ports:
      - "8000:8000"
    
    environment:
      - PYTHONUNBUFFERED=1
      - TZ=Asia/Shanghai
      - MAX_UPLOAD_SIZE_MB=50
      - CACHE_ENABLED=true
      - DB_PATH=/app/data/database.db
      - DATA_DIR=/app/data
    
    volumes:
      # 关键修改：挂载项目根目录的data文件夹，而不是backend/data
      # 这样容器内就能访问到 /app/data/input/汇总表.csv
      - ./data:/app/data
      - ./backend/logs:/app/logs
    
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/api/health', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    networks:
      - mining-network

  # ──────────────────────────────────────────────────────────────────────────
  # 前端服务 - Nginx + Vue
  # ──────────────────────────────────────────────────────────────────────────
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      # 使用 BuildKit 加速构建
      cache_from:
        - mining-system-frontend:latest
      args:
        - BUILDKIT_INLINE_CACHE=1
    image: mining-system-frontend:latest
    container_name: mining-frontend
    
    restart: unless-stopped
    
    ports:
      - "80:80"
    
    environment:
      - TZ=Asia/Shanghai
    
    volumes:
      - ./frontend/logs:/var/log/nginx
    
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 5s
      retries: 2
      start_period: 10s
    
    depends_on:
      backend:
        condition: service_healthy
    
    networks:
      - mining-network

# ──────────────────────────────────────────────────────────────────────────
# 网络配置
# ──────────────────────────────────────────────────────────────────────────
networks:
  mining-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# ──────────────────────────────────────────────────────────────────────────
# 卷配置（如果需要命名卷）
# ──────────────────────────────────────────────────────────────────────────
# volumes:
#   backend-data:
#   backend-logs:
#   frontend-logs:
